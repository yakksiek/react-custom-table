{
    "sourceFile": "src/components/UsersTable/UserTable.test.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 15,
            "patches": [
                {
                    "date": 1705336637236,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1705336652995,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,1 +1,1 @@\n-'\n\\ No newline at end of file\n+import {render, screen}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1705336658884,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,1 +1,1 @@\n-import {render, screen}\n\\ No newline at end of file\n+import {render, waitFor} from ''\n\\ No newline at end of file\n"
                },
                {
                    "date": 1705336665590,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,1 +1,1 @@\n-import {render, waitFor} from ''\n\\ No newline at end of file\n+import {render, waitFor} from 'test'\n\\ No newline at end of file\n"
                },
                {
                    "date": 1705336671541,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,2 @@\n+import {render, waitFor} from '@testing-library/react';\n+\n"
                },
                {
                    "date": 1705336679252,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,3 +1,3 @@\n-import {render, waitFor} from '@testing-library/react';\n+import { render, waitFor } from '@testing-library/react';\n+import UserTable from './UserTable';\n\\ No newline at end of file\n \n-import {render, waitFor} from 'test'\n"
                },
                {
                    "date": 1705336761143,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,2 +1,6 @@\n import { render, waitFor } from '@testing-library/react';\n-import UserTable from './UserTable';\n\\ No newline at end of file\n+import UserTable from './UserTable';\n+\n+describe('UserTable', () => {\n+  \n+})\n\\ No newline at end of file\n"
                },
                {
                    "date": 1705336767192,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n import { render, waitFor } from '@testing-library/react';\n import UserTable from './UserTable';\n \n describe('UserTable', () => {\n-  \n+  it('shoud show an erro ')\n })\n\\ No newline at end of file\n"
                },
                {
                    "date": 1705336774152,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n import { render, waitFor } from '@testing-library/react';\n import UserTable from './UserTable';\n \n describe('UserTable', () => {\n-  it('shoud show an erro ')\n+  it('shoud show an error when failed to fetch data', asaync ())\n })\n\\ No newline at end of file\n"
                },
                {
                    "date": 1705337117690,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,10 @@\n+import { render, waitFor } from '@testing-library/react';\n+import UserTable from './UserTable';\n+\n+describe('UserTable', () => {\n+  it('shoud show an error when failed to fetch data', async () => {\n+    const spy = jest.spyOn(window, 'fetch');\n+\n+    \n+  })\n+})\n\\ No newline at end of file\n"
                },
                {
                    "date": 1705337127302,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,13 +4,7 @@\n describe('UserTable', () => {\n   it('shoud show an error when failed to fetch data', async () => {\n     const spy = jest.spyOn(window, 'fetch');\n \n-    \n+    fetch.mock\n   })\n-})\n-import { render, waitFor } from '@testing-library/react';\n-import UserTable from './UserTable';\n-\n-describe('UserTable', () => {\n-  it('shoud show an error when failed to fetch data', asaync ())\n })\n\\ No newline at end of file\n"
                },
                {
                    "date": 1705337132483,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,7 +4,7 @@\n describe('UserTable', () => {\n   it('shoud show an error when failed to fetch data', async () => {\n     const spy = jest.spyOn(window, 'fetch');\n \n-    fetch.mock\n+    fetch.mockRejectValueOnce()\n   })\n })\n\\ No newline at end of file\n"
                },
                {
                    "date": 1705337140149,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,10 @@\n+import { render, waitFor } from '@testing-library/react';\n+import UserTable from './UserTable';\n+\n+describe('UserTable', () => {\n+  it('shoud show an error when failed to fetch data', async () => {\n+    const spy = jest.spyOn(window, 'fetch');\n+\n+    fetch.mockRejectValueOnce(new Error(''))\n+  })\n+})\n\\ No newline at end of file\n"
                },
                {
                    "date": 1705337146587,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,7 +4,7 @@\n describe('UserTable', () => {\n   it('shoud show an error when failed to fetch data', async () => {\n     const spy = jest.spyOn(window, 'fetch');\n \n-    fetch.mockRejectValueOnce(new Error(''))\n+    fetch.mockRejectValueOnce(new Error('Fail'))\n   })\n })\n\\ No newline at end of file\n"
                },
                {
                    "date": 1705337153122,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,7 +4,7 @@\n describe('UserTable', () => {\n   it('shoud show an error when failed to fetch data', async () => {\n     const spy = jest.spyOn(window, 'fetch');\n \n-    fetch.mockRejectValueOnce(new Error('Failed to fetch data'))\n+    fetch.mockRejectValueOnce(new Error('Failed to fetch data'));\n   })\n })\n\\ No newline at end of file\n"
                },
                {
                    "date": 1705337245650,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,16 @@\n+import { render, waitFor } from '@testing-library/react';\n+import UserTable from './UserTable';\n+\n+describe('UserTable', () => {\n+    it('shoud show an error when failed to fetch data', async () => {\n+        const spy = jest.spyOn(window, 'fetch');\n+\n+        fetch.mockRejectValueOnce(new Error('Failed to fetch data'));\n+\n+        await waitFor(() => {\n+          expect(screen.getByText('Failed to fetch data')).toBeInTheDocument();\n+      });\n+\n+      spy.mockRestore();\n+    });\n+});\n"
                }
            ],
            "date": 1705336637236,
            "name": "Commit-0",
            "content": "'"
        }
    ]
}